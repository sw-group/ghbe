openapi: 3.0.3
info:
  title: Mining GitHub
  description: "This Swagger API provides endpoints for retrieving detailed information\
    \ about issues, workflows, and repository info. It allows users to access various\
    \ aspects of a repository's management, including issue tracking, workflow management,\
    \ and general repository information.\n \nSome useful links:\n- [The GitHub project\
    \ repository](https://github.com/sw-group/ghbe)\n- [The source API definition](https://github.com/sw-group/ghbe/blob/main/swagger_server/swagger/swagger.yaml)"
  contact:
    email: sw.project.mining@gmail.com
  license:
    name: MIT License
    url: https://opensource.org/license/mit
  version: 1.0.0
externalDocs:
  description: Find out more about GitHub mining project
  url: https://github.com/sw-group/ghbe
servers:
- url: https://127.0.0.1:8080/ghbe/api/v1
tags:
- name: repository
  description: Everything about GitHub repository
- name: gui
  description: Services for the GitHub UI
paths:
  /repositories:
    get:
      tags:
      - repository
      summary: Retrieve repositories with filtering options
      description: Retrieve repositories with filtering options
      operationId: get_repositories
      parameters:
      - name: name
        in: query
        description: "Filter repositories by name. \nIf providing a full name, prefix\
          \ it with repo: (e.g., repo:owner/name).\n"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^(repo:[\\w-]+/[\\w-]+|[\\w-]+)$"
          type: string
      - name: language
        in: query
        description: Filter repositories by programming language
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: isPrivate
        in: query
        description: Filter private repositories
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: dateRange
        in: query
        description: "Filter repositories by date range (e.g., 2023-01-01,2023-12-31)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d{4}-\\d{2}-\\d{2},\\d{4}-\\d{2}-\\d{2}$"
          type: string
      - name: stars
        in: query
        description: "Filter repositories by stars range (e.g., 10,100)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d+,\\d+$"
          type: string
      - name: forks
        in: query
        description: "Filter repositories by forks range (e.g., 5,50)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d+,\\d+$"
          type: string
      - name: issues
        in: query
        description: "Filter repositories by issues range (e.g., 0,20)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d+,\\d+$"
          type: string
      - name: pulls
        in: query
        description: "Filter repositories by pull requests range (e.g., 1,10)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d+,\\d+$"
          type: string
      - name: workflows
        in: query
        description: "Filter repositories by workflows range (e.g., 1,5)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d+,\\d+$"
          type: string
      - name: watchers
        in: query
        description: "Filter repositories by watchers range (e.g., 1,20)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d+,\\d+$"
          type: string
      - name: page
        in: query
        description: Specify the page number for paginated results (default is 1)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: sort
        in: query
        description: "Sort repositories by field in ascending or descending order\
          \ \n(e.g., field-asc or field-desc).\nIf order is not specified, default\
          \ to ascending.\n"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^[\\w.-]+(-asc|-desc)?$"
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoriesList'
        "400":
          description: Bad Request
        "422":
          description: Validation exception
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.repository_controller
  /repositories/{owner}/{name}:
    get:
      tags:
      - repository
      summary: Search repositories by filter
      description: Search repositories by filter
      operationId: get_repository_by_full_name
      parameters:
      - name: owner
        in: path
        description: The owner of the repository
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: owner
      - name: name
        in: path
        description: The name of the repository
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: name
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        "400":
          description: Bad Request
        "422":
          description: Validation exception
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.repository_controller
  /repositories/{owner}/{name}/workflows:
    get:
      tags:
      - repository
      summary: Search workflows of the repo by fullname
      description: Search workflows of the repo by fullname
      operationId: get_workflows_of_repo
      parameters:
      - name: owner
        in: path
        description: The owner of the repository
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: owner
      - name: name
        in: path
        description: The name of the repository
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: name
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                title: WorkflowList
                type: array
                items:
                  $ref: '#/components/schemas/Workflow'
                x-content-type: application/json
        "400":
          description: Bad Request
        "422":
          description: Validation exception
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.repository_controller
  /repositories/{owner}/{name}/issues:
    get:
      tags:
      - repository
      summary: Search issues of the repo by fullname
      description: Search issues of the repo by fullname
      operationId: get_issues_of_repo
      parameters:
      - name: owner
        in: path
        description: The owner of the repository
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: owner
      - name: name
        in: path
        description: The name of the repository
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: name
      - name: issue_type
        in: query
        description: The type of the issues
        required: true
        style: form
        explode: true
        schema:
          type: string
          default: issues
          enum:
          - issues
          - pulls
      - name: state
        in: query
        description: The state of the issues
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - open
          - closed
          - merged
      - name: dateRange
        in: query
        description: "Filter repositories by date range (e.g., 2023-01-01,2023-12-31)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d{4}-\\d{2}-\\d{2},\\d{4}-\\d{2}-\\d{2}$"
          type: string
      - name: page
        in: query
        description: Specify the page number for paginated results (default is 1)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: sort
        in: query
        description: "Sort repositories by field in ascending or descending order\
          \ \n(e.g., field-asc or field-desc).\nIf order is not specified, default\
          \ to ascending.\n"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^[\\w.-]+(-asc|-desc)?$"
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuesList'
              x-content-type: application/json
        "400":
          description: Bad Request
        "422":
          description: Validation exception
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.repository_controller
  /repositories/{owner}/{name}/issues/{number}/comments:
    get:
      tags:
      - repository
      summary: Search issues of the repo by fullname
      description: Search issues of the repo by fullname
      operationId: get_comments_of_issue
      parameters:
      - name: owner
        in: path
        description: The owner of the repository
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: owner
      - name: name
        in: path
        description: The name of the repository
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: name
      - name: number
        in: path
        description: The number of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "1"
      - name: page
        in: query
        description: Specify the page number for paginated results (default is 1)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentsList'
              x-content-type: application/json
        "400":
          description: Bad Request
        "422":
          description: Validation exception
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.repository_controller
  /repositories/statistics:
    get:
      tags:
      - repository
      summary: Compute the statistics of all the filtered repositories
      description: "Compute the statistics of all the filtered repositories. \nIf\
        \ you want not insert any filter the statistic will realize on every field.\n"
      operationId: get_statistics
      parameters:
      - name: name
        in: query
        description: |
          Filter repositories by name. If providing a full name, prefix it with repo: (e.g., repo:owner/name).
        required: false
        style: form
        explode: true
        schema:
          pattern: "^(repo:[\\w-]+/[\\w-]+|[\\w-]+)$"
          type: string
      - name: language
        in: query
        description: Filter repositories by programming language
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: isPrivate
        in: query
        description: Filter private repositories
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: dateRange
        in: query
        description: "Filter repositories by date range (e.g., 2023-01-01,2023-12-31)"
        required: true
        style: form
        explode: true
        schema:
          pattern: "^\\d{4}-\\d{2}-\\d{2},\\d{4}-\\d{2}-\\d{2}$"
          type: string
      - name: stars
        in: query
        description: "Filter repositories by stars range (e.g., 10,100)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d+,\\d+$"
          type: string
      - name: forks
        in: query
        description: "Filter repositories by forks range (e.g., 5,50)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d+,\\d+$"
          type: string
      - name: issues
        in: query
        description: "Filter repositories by issues range (e.g., 0,20)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d+,\\d+$"
          type: string
      - name: pulls
        in: query
        description: "Filter repositories by pull requests range (e.g., 1,10)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d+,\\d+$"
          type: string
      - name: workflows
        in: query
        description: "Filter repositories by workflows range (e.g., 1,5)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d+,\\d+$"
          type: string
      - name: watchers
        in: query
        description: "Filter repositories by watchers range (e.g., 1,20)"
        required: false
        style: form
        explode: true
        schema:
          pattern: "^\\d+,\\d+$"
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statistics'
              x-content-type: application/json
        "400":
          description: Bad Request
        "422":
          description: Validation exception
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.repository_controller
  /repositories/{owner}/{name}/statistics:
    get:
      tags:
      - repository
      summary: Compute the statistics of a repository
      description: Compute the statistics of a repository
      operationId: get_statistics_of_repository
      parameters:
      - name: owner
        in: path
        description: The owner of the repository
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: owner
      - name: name
        in: path
        description: The name of the repository
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: name
      - name: dateRange
        in: query
        description: "Filter repositories by date range (e.g., 2023-01-01,2023-12-31)"
        required: true
        style: form
        explode: true
        schema:
          pattern: "^\\d{4}-\\d{2}-\\d{2},\\d{4}-\\d{2}-\\d{2}$"
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statistics'
              x-content-type: application/json
        "400":
          description: Bad Request
        "422":
          description: Validation exception
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.repository_controller
  /metrics:
    get:
      tags:
      - gui
      summary: Get the metrics for filter configuration
      description: Get the metrics for filter configuration
      operationId: get_metrics
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metrics'
              x-content-type: application/json
        "400":
          description: Bad Request
        "422":
          description: Validation exception
        "500":
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.gui_controller
components:
  schemas:
    Repository:
      type: object
      properties:
        full_name:
          type: string
          example: owner/name
        url:
          type: string
          example: https://github.com/owner/name
        private:
          type: boolean
          default: false
        language:
          type: string
          example: python
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        pushed_at:
          type: string
          format: date-time
        stars_count:
          type: integer
          format: int64
          example: 10
        forks_count:
          type: integer
          format: int64
          example: 5
        watchers_count:
          type: integer
          format: int64
          example: 10
        issue_count:
          type: integer
          format: int64
          example: 40
        pr_count:
          type: integer
          format: int64
          example: 20
        workflows_count:
          type: integer
          format: int64
          example: 15
      example:
        workflows_count: 15
        private: false
        issue_count: 40
        pushed_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        language: python
        url: https://github.com/owner/name
        full_name: owner/name
        updated_at: 2000-01-23T04:56:07.000+00:00
        stars_count: 10
        watchers_count: 10
        forks_count: 5
        pr_count: 20
    Workflow:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Workflow
        path:
          type: string
          example: .github/workflows/wk.yml
        url:
          type: string
          example: "https://api.github.com/repos/owner/name/actions/workflows/{workflow_id}"
        state:
          type: string
          example: active
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        file_url:
          type: string
          example: https://github.com/owner/name/blob/master/.github/workflows/wk.yml
        size:
          type: string
        lines:
          type: number
          format: int32
      example:
        path: .github/workflows/wk.yml
        file_url: https://github.com/owner/name/blob/master/.github/workflows/wk.yml
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: Workflow
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        state: active
        url: "https://api.github.com/repos/owner/name/actions/workflows/{workflow_id}"
        size: 900 bytes
        lines: 10
    Issue:
      type: object
      properties:
        number:
          type: integer
        repo:
          type: string
          example: owner/name
        title:
          type: string
        url:
          type: string
        state:
          type: string
          enum:
          - OPEN
          - CLOSED
        body:
          type: string
        author:
          $ref: '#/components/schemas/Author'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Issue_labels'
        comments:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
      example:
        number: 0
        comments: 6
        closed_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        author:
          name: name
          url: url
        created_at: 2000-01-23T04:56:07.000+00:00
        state: OPEN
        title: title
        body: body
        url: url
        labels:
        - name: name
        - name: name
    Comment:
      type: object
      properties:
        author:
          $ref: '#/components/schemas/Author'
        message:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        association:
          type: string
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        author:
          name: name
          url: url
        created_at: 2000-01-23T04:56:07.000+00:00
        message: message
    Issue_labels:
      type: object
      properties:
        name:
          type: string
      example:
        name: name
    Author:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
      example:
        name: name
        url: url
    Statistics:
      type: object
      properties:
        pulls:
          $ref: '#/components/schemas/Statistics_pulls'
        issues:
          $ref: '#/components/schemas/Statistics_issues'
        workflows:
          $ref: '#/components/schemas/Statistics_workflows'
        repositories:
          $ref: '#/components/schemas/Statistics_repositories'
      example:
        repositories: {}
        workflows: {}
        issues: {}
        pulls:
          merged: 6
          dailyClosedProgress:
            stats:
              key: 0
    Statistics_base:
      type: object
      properties:
        dailyClosedProgress:
          type: object
          additionalProperties:
            type: integer
            format: int32
          example:
            key: 0
        dailyOpenedProgress:
          type: object
          additionalProperties:
            type: integer
            format: int32
          example:
            key: 0
      example:
        dailyClosedProgress:
          key: 0
        dailyOpenedProgress:
          key: 0
    Statistics_pulls:
      allOf:
      - $ref: '#/components/schemas/Statistics_base'
      - type: object
        properties:
          merged:
            type: integer
            format: int32
        example:
          merged: 6
          dailyClosedProgress:
            key: 0
          dailyOpenedProgress:
            key: 0
    Statistics_issues:
      allOf:
      - $ref: '#/components/schemas/Statistics_base'
      - type: object
        example:
          dailyClosedProgress:
            key: 0
          dailyOpenedProgress:
            key: 0
    Statistics_workflows:
      type: object
      properties:
        metrics:
          type: object
          additionalProperties:
            type: integer
            format: int32
          example:
            key: 0
      example:
        metrics:
          key: 0
    Statistics_repositories:
      type: object
      properties:
        stats:
          type: object
          additionalProperties:
            type: integer
            format: int32
          example:
            key: 0
      example:
        stats:
          key: 0
    Metrics:
      type: object
      properties:
        languages:
          type: array
          items:
            type: string
        maxes:
          type: object
          additionalProperties:
            type: integer
            format: int32
          example:
            key: 0
      example:
        languages:
        - languages
        - languages
        maxs:
          key: 0
    Result:
      type: object
      properties:
        page:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
    RepositoriesList:
      title: RepositoriesList
      allOf:
      - $ref: '#/components/schemas/Result'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Repository'
      x-content-type: application/json
    IssuesList:
      title: IssuesList
      allOf:
      - $ref: '#/components/schemas/Result'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Issue'
    CommentsList:
      title: CommentsList
      allOf:
      - $ref: '#/components/schemas/Result'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Comment'


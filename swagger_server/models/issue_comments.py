# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.comment import Comment  # noqa: F401,E501
from swagger_server import util


class IssueComments(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, total: int=None, list: List[Comment]=None):  # noqa: E501
        """IssueComments - a model defined in Swagger

        :param total: The total of this IssueComments.  # noqa: E501
        :type total: int
        :param list: The list of this IssueComments.  # noqa: E501
        :type list: List[Comment]
        """
        self.swagger_types = {
            'total': int,
            'list': List[Comment]
        }

        self.attribute_map = {
            'total': 'total',
            'list': 'list'
        }
        self._total = total
        self._list = list

    @classmethod
    def from_dict(cls, dikt) -> 'IssueComments':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Issue_comments of this IssueComments.  # noqa: E501
        :rtype: IssueComments
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total(self) -> int:
        """Gets the total of this IssueComments.


        :return: The total of this IssueComments.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total: int):
        """Sets the total of this IssueComments.


        :param total: The total of this IssueComments.
        :type total: int
        """

        self._total = total

    @property
    def list(self) -> List[Comment]:
        """Gets the list of this IssueComments.


        :return: The list of this IssueComments.
        :rtype: List[Comment]
        """
        return self._list

    @list.setter
    def list(self, list: List[Comment]):
        """Sets the list of this IssueComments.


        :param list: The list of this IssueComments.
        :type list: List[Comment]
        """

        self._list = list

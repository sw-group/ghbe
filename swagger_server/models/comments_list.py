# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401

from swagger_server import util
from swagger_server.models.base_model_ import Model
from swagger_server.models.comment import Comment  # noqa: F401,E501
from swagger_server.models.result import Result  # noqa: F401,E501


class CommentsList(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, items: List[Comment] = None, page: int = None, total_elements: int = None):  # noqa: E501
        """CommentsList - a model defined in Swagger

        :param items: The items of this CommentsList.  # noqa: E501
        :type items: List[Comment]
        :param page: The page of this CommentsList.  # noqa: E501
        :type page: int
        :param total_elements: The total_elements of this CommentsList.  # noqa: E501
        :type total_elements: int
        """
        self.swagger_types = {
            'items': List[Comment],
            'page': int,
            'total_elements': int
        }

        self.attribute_map = {
            'items': 'items',
            'page': 'page',
            'total_elements': 'total_elements'
        }
        self._items = items
        self._page = page
        self._total_elements = total_elements

    @classmethod
    def from_dict(cls, dikt) -> 'CommentsList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CommentsList of this CommentsList.  # noqa: E501
        :rtype: CommentsList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self) -> List[Comment]:
        """Gets the items of this CommentsList.


        :return: The items of this CommentsList.
        :rtype: List[Comment]
        """
        return self._items

    @items.setter
    def items(self, items: List[Comment]):
        """Sets the items of this CommentsList.


        :param items: The items of this CommentsList.
        :type items: List[Comment]
        """

        self._items = items

    @property
    def page(self) -> int:
        """Gets the page of this CommentsList.


        :return: The page of this CommentsList.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page: int):
        """Sets the page of this CommentsList.


        :param page: The page of this CommentsList.
        :type page: int
        """

        self._page = page

    @property
    def total_elements(self) -> int:
        """Gets the total_elements of this CommentsList.


        :return: The total_elements of this CommentsList.
        :rtype: int
        """
        return self._total_elements

    @total_elements.setter
    def total_elements(self, total_elements: int):
        """Sets the total_elements of this CommentsList.


        :param total_elements: The total_elements of this CommentsList.
        :type total_elements: int
        """

        self._total_elements = total_elements

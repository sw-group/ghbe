# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class StatisticsBase(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, daily_closed_progress: Dict[str, int]=None, daily_opened_progress: Dict[str, int]=None):  # noqa: E501
        """StatisticsBase - a model defined in Swagger

        :param daily_closed_progress: The daily_closed_progress of this StatisticsBase.  # noqa: E501
        :type daily_closed_progress: Dict[str, int]
        :param daily_opened_progress: The daily_opened_progress of this StatisticsBase.  # noqa: E501
        :type daily_opened_progress: Dict[str, int]
        """
        self.swagger_types = {
            'daily_closed_progress': Dict[str, int],
            'daily_opened_progress': Dict[str, int]
        }

        self.attribute_map = {
            'daily_closed_progress': 'dailyClosedProgress',
            'daily_opened_progress': 'dailyOpenedProgress'
        }
        self._daily_closed_progress = daily_closed_progress
        self._daily_opened_progress = daily_opened_progress

    @classmethod
    def from_dict(cls, dikt) -> 'StatisticsBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Statistics_base of this StatisticsBase.  # noqa: E501
        :rtype: StatisticsBase
        """
        return util.deserialize_model(dikt, cls)

    @property
    def daily_closed_progress(self) -> Dict[str, int]:
        """Gets the daily_closed_progress of this StatisticsBase.


        :return: The daily_closed_progress of this StatisticsBase.
        :rtype: Dict[str, int]
        """
        return self._daily_closed_progress

    @daily_closed_progress.setter
    def daily_closed_progress(self, daily_closed_progress: Dict[str, int]):
        """Sets the daily_closed_progress of this StatisticsBase.


        :param daily_closed_progress: The daily_closed_progress of this StatisticsBase.
        :type daily_closed_progress: Dict[str, int]
        """

        self._daily_closed_progress = daily_closed_progress

    @property
    def daily_opened_progress(self) -> Dict[str, int]:
        """Gets the daily_opened_progress of this StatisticsBase.


        :return: The daily_opened_progress of this StatisticsBase.
        :rtype: Dict[str, int]
        """
        return self._daily_opened_progress

    @daily_opened_progress.setter
    def daily_opened_progress(self, daily_opened_progress: Dict[str, int]):
        """Sets the daily_opened_progress of this StatisticsBase.


        :param daily_opened_progress: The daily_opened_progress of this StatisticsBase.
        :type daily_opened_progress: Dict[str, int]
        """

        self._daily_opened_progress = daily_opened_progress

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.statistics_issues import StatisticsIssues  # noqa: F401,E501
from swagger_server.models.statistics_pulls import StatisticsPulls  # noqa: F401,E501
from swagger_server.models.statistics_workflows import StatisticsWorkflows  # noqa: F401,E501
from swagger_server import util


class Statistics(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, pulls: StatisticsPulls=None, issues: StatisticsIssues=None, workflows: StatisticsWorkflows=None):  # noqa: E501
        """Statistics - a model defined in Swagger

        :param pulls: The pulls of this Statistics.  # noqa: E501
        :type pulls: StatisticsPulls
        :param issues: The issues of this Statistics.  # noqa: E501
        :type issues: StatisticsIssues
        :param workflows: The workflows of this Statistics.  # noqa: E501
        :type workflows: StatisticsWorkflows
        """
        self.swagger_types = {
            'pulls': StatisticsPulls,
            'issues': StatisticsIssues,
            'workflows': StatisticsWorkflows
        }

        self.attribute_map = {
            'pulls': 'pulls',
            'issues': 'issues',
            'workflows': 'workflows'
        }
        self._pulls = pulls
        self._issues = issues
        self._workflows = workflows

    @classmethod
    def from_dict(cls, dikt) -> 'Statistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Statistics of this Statistics.  # noqa: E501
        :rtype: Statistics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pulls(self) -> StatisticsPulls:
        """Gets the pulls of this Statistics.


        :return: The pulls of this Statistics.
        :rtype: StatisticsPulls
        """
        return self._pulls

    @pulls.setter
    def pulls(self, pulls: StatisticsPulls):
        """Sets the pulls of this Statistics.


        :param pulls: The pulls of this Statistics.
        :type pulls: StatisticsPulls
        """

        self._pulls = pulls

    @property
    def issues(self) -> StatisticsIssues:
        """Gets the issues of this Statistics.


        :return: The issues of this Statistics.
        :rtype: StatisticsIssues
        """
        return self._issues

    @issues.setter
    def issues(self, issues: StatisticsIssues):
        """Sets the issues of this Statistics.


        :param issues: The issues of this Statistics.
        :type issues: StatisticsIssues
        """

        self._issues = issues

    @property
    def workflows(self) -> StatisticsWorkflows:
        """Gets the workflows of this Statistics.


        :return: The workflows of this Statistics.
        :rtype: StatisticsWorkflows
        """
        return self._workflows

    @workflows.setter
    def workflows(self, workflows: StatisticsWorkflows):
        """Sets the workflows of this Statistics.


        :param workflows: The workflows of this Statistics.
        :type workflows: StatisticsWorkflows
        """

        self._workflows = workflows
